#compdef mssh-menu mssh_menu.py mssh-menu.pyz

# AUTOMATICALLY GENERATED by `shtab`


_shtab_mssh_menu_commands() {
  local _commands=(
    
  )
  _describe 'mssh-menu commands' _commands
}

_shtab_mssh_menu_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--completion[Print mssh-menu shell completion to the terminal and exit]:completion:(bash zsh fish)"
  "(- : *)"{-v,--version}"[show the version number and exit]"
  {-n,--number}"[\*\*Risky option\*\* Enter selection number or numbers (separated by commas and\/or using a dash to specify a range) instead of showing the menu.]:number:"
  {-u,--user}"[Enter a username instead of being prompted for one.]:user:"
  {-c,--columns}"[Override the autocalculation of menu columns. Specify an maximum number of menu columns to display.]:columns:"
  {-m,--menu-only}"[Display the menu selection list and exit.]"
  ":name of CSV file (default\=\$HOME\/servers.csv):"
)


_shtab_mssh_menu() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_mssh_menu_options[(I)${(q)one_or_more}*]} + ${_shtab_mssh_menu_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_mssh_menu_options+=(': :_shtab_mssh_menu_commands' '*::: :->mssh-menu')
  fi
  _arguments -C -s $_shtab_mssh_menu_options

  case $state in
    mssh-menu)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_mssh_menu-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_mssh_menu -N mssh-menu
else
  # autoload from fpath, call function directly
  _shtab_mssh_menu "$@"
fi

